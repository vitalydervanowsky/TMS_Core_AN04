package Lesson2;

public class Lesson1HomeWorkSolution {
    public static void main(String[] args) {
    }

    private void task1() {
        /*
         * В переменную записываем число. Надо вывести на экран сколько
         * в этом числе цифр и положительное оно или отрицательное. Например,
         * "это однозначное положительное число". Добавить решение для дробных чисел.*/
        double a = 2.723123;
        int b = Math.abs((int) a);
        int integerParthLength = Integer.toString(b).length();
        System.out.println("Сколько цифр в целой части " + Integer.toString(b).length());
        int numberLength = Double.toString(Math.abs(a)).length();
        System.out.println(numberLength - integerParthLength - 1);
    }

    private void task2() {
        /*
        Треугольник существует только тогда, когда сумма любых двух его сторон больше третьей.
        Определить существует ли такой треугольник. Дано: a, b, c – стороны предполагаемого треугольника.
        Требуется сравнить длину каждого отрезка-стороны с суммой двух других.
        Если хотя бы в одном случае отрезок окажется больше суммы двух других, то треугольника с такими сторонами не существует.
        Подсказка: используйте тип boolean и логические операции с ним: || - логическое ИЛИ, && - логическое И**/
        int a1 = 11;
        int b1 = 20;
        int c1 = 30;
        boolean exists = (a1 + b1) > c1 && (a1 + c1) > b1 && (c1 + b1) > a1;
        System.out.println(exists);
    }

    private void task3() {
        // Даны 2 числа. Вывести большее из них. Подсказка: используйте Math.abs(..) для нахождения модуля числа
        int a = -2;
        int b = 4;
        int max = (a + b + Math.abs(a - b)) / 2;
        // Math.abs(a - b) = a - b, если a > b; b - a, если a < b
        // a + b + (b - a) = 2*b
    }

    private void task4() {
        // (*) Даны 3 целых числа. Найти количество положительных чисел в исходном наборе.
        // Подсказка: используйте Math.abs(..) для нахождения модуля числа
        int a = -1; // +1
        int b = 4; // ничего делаю, либо +0
        int c = -4; // +1

        // Сначала делим все числа на модуль себя же, получаем +1 или -1
        a = a / Math.abs(a);
        b = b / Math.abs(b);
        c = c / Math.abs(c);

        // первый способ
        // для положи -> 1, для отрицательных -> -1
        // 1 -> 1
        // -1 -> 0
        // такая функция - это прибавить 1 и разделить на 2
        // (1 + 1) / 2 = 1
        // (0 + 1) / 2 = 0
        System.out.println((a + 1) / 2 + (b + 1) / 2 + (c + 1) / 2 );

        // второй способ
        // суммируем +1 и -1, мы получаем
        // Мы занем разницу между положительынми и отрицательными
        // Мы знаем кол-во всех чисел = n
        // Пусть a - кол-во положи, b - кол-во отрицательных
        // Тогда по имеющимся данным
        // a + b = 3 - кол-во всех чисел
        // a - b = полученная сумма
        // a + b + a - b = 3 + полученная сумма => 2a = 3 + полученная сумма => a = (3 + sum) / 2
        System.out.println((3 + a + b + c) / 2);
    }
}
